set(CMAKE_CXX_VERBOSE_FLAG "-v")

set(CMAKE_CXX_FLAGS_INIT "")
set(CMAKE_CXX_FLAGS_DEBUG_INIT "-g")
set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT "-Os -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE_INIT "-O3 -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT "-O2 -g -DNDEBUG")

if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 12.0)
  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY "-fvisibility=")
endif()

set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>")
set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>")

set(CMAKE_CXX11_COMPILER_FEATURES)

include("${CMAKE_ROOT}/Modules/Compiler/CxxFeatureTesting.cmake")

if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.1)
  if (CMAKE_CXX_SIMULATE_ID STREQUAL MSVC)
    set(CMAKE_CXX11_STANDARD_COMPILE_OPTION "/Qstd=c++0x")
  else()
    set(CMAKE_CXX11_STANDARD_COMPILE_OPTION "-std=c++0x")
    record_cxx_compiler_features("-std=c++0x" CMAKE_CXX11_COMPILER_FEATURES)
    # TODO: Does intel support GNU extensions and -std=gnu++0x etc?
  endif()
endif()

if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 13)
  if (CMAKE_CXX_SIMULATE_ID STREQUAL MSVC)
    set(CMAKE_CXX11_STANDARD_COMPILE_OPTION "/Qstd=c++11")
  else()
    set(CMAKE_CXX11_STANDARD_COMPILE_OPTION "-std=c++11")
    record_cxx_compiler_features("-std=c++11" CMAKE_CXX11_COMPILER_FEATURES)
  endif()
endif()

set(CMAKE_CXX_COMPILER_FEATURES
  ${CMAKE_CXX11_COMPILER_FEATURES}
)
